
/* -- 1. Постоянные таблицы и связи между ними -- */

/*
DROP TABLE IF EXISTS LECTURER CASCADE;
DROP TABLE IF EXISTS PUBLICATION CASCADE;
DROP TABLE IF EXISTS COMPILATION CASCADE;
DROP TABLE IF EXISTS PUBLISHER CASCADE;
DROP TABLE IF EXISTS PUBLICATION_AUTHORS CASCADE;
DROP TABLE IF EXISTS COMPILATION_ENTRY CASCADE;
*/
CREATE TABLE LECTURER (
	lecturerID SERIAL PRIMARY KEY,
	name VARCHAR(100),
	degree VARCHAR(30)
);
CREATE TABLE PUBLICATION(
	publicationID SERIAL PRIMARY KEY,
	name VARCHAR(30),
	type SMALLINT,
	publicationDate DATE
);
CREATE TABLE PUBLISHER(
	publisherID SERIAL PRIMARY KEY,
	fullName VARCHAR(200),
	abbreviation VARCHAR(30),
	country VARCHAR(100),
	city VARCHAR(100),
	address VARCHAR(100),
	phoneNumber VARCHAR(13),
	email VARCHAR(100)
);
CREATE TABLE COMPILATION(
	compilationID SERIAL PRIMARY KEY,
	name VARCHAR(30),
	publisherID INT,
	publicationDate DATE,
	CONSTRAINT fk_publisherID FOREIGN KEY(publisherID) REFERENCES PUBLISHER(publisherID)
		ON DELETE SET NULL 
);
CREATE TABLE PUBLICATION_AUTHORS(
	publicationID INT,
	lecturerID INT,
	CONSTRAINT fk_publicationID FOREIGN KEY(publicationID) REFERENCES PUBLICATION(publicationID)
		ON DELETE CASCADE,
	CONSTRAINT fk_lecturerID FOREIGN KEY(lecturerID) REFERENCES LECTURER(lecturerID)
		ON DELETE SET NULL
);
CREATE TABLE COMPILATION_ENTRY(
	publicationID INT,
	compilationID INT,
	CONSTRAINT fk_publicationID FOREIGN KEY(publicationID) REFERENCES PUBLICATION(publicationID)
		ON DELETE CASCADE,
	CONSTRAINT fk_compilationID FOREIGN KEY(compilationID) REFERENCES COMPILATION(compilationID)
		ON DELETE CASCADE
);